name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [prereleased]

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix: 
        GOOS: [linux, windows, darwin, android]
        GOARCH: [386, amd64, arm, arm64]
        exclude: 
        - { GOOS: darwin, GOARCH: arm }
        - { GOOS: darwin, GOARCH: arm64 }
        - { GOOS: darwin, GOARCH: 386 }
        - { GOOS: windows, GOARCH: arm64 }
        - { GOOS: windows, GOARCH: arm64 }
        - { GOOS: android, GOARCH: 386 }
        - { GOOS: android, GOARCH: amd64 }
        - { GOOS: android, GOARCH: arm }
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      env:
        GOOS: ${{ matrix.GOOS }}
        GOARCH: ${{ matrix.GOARCH }}
        CGO_ENABLED: 0
      run: go build -o gun-lite-${{ matrix.GOOS }}-${{ matrix.GOARCH }} github.com/Qv2ray/gun-lite/cmd
    - name: Upload assets
      uses: actions/upload-artifact@v2.2.1
      with:
        name: gun-lite-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
        path: gun-lite-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
    - name: Upload release
      uses: svenstaro/upload-release-action@v1-release
      if: github.event_name == 'release'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: gun-lite-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
        asset_name: gun-lite-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
        tag: ${{ github.ref }}
        overwrite: true
